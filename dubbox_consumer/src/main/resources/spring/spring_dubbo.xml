<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd
	    http://code.alibabatech.com/schema/dubbo
	    http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	">

    <task:annotation-driven/>

    <context:annotation-config/>

    <context:component-scan base-package="com.dubbox.consumer.*"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <!-- 越靠后越有效，取到最后一个有效的未知 -->
                <value>classpath:/*.properties</value>
            </list>
        </property>
    </bean>


    <dubbo:application name="dubbox_consumer" owner="Lee" organization="dubbox_demo"/>

    <!--激活注解-->
    <bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>


    <!-- 声明需要暴露的服务接口 -->
    <dubbo:protocol name="dubbo" serialization="kryo" port="${dubbo.server.port}"/>

    <!--<dubbo:monitor protocol="registry" />-->

    <dubbo:registry protocol="zookeeper" address="${zkHost}"/>

    <dubbo:protocol name="rest" port="${rest.server.port}" threads="500" contextpath="/"
                    server="servlet" accepts="500"
                    extension="com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter"/>

    <!--关闭所有服务的启动时检查 (解决没有提供者时报错问题)-->
    <dubbo:consumer check="false" timeout="3000"/>

    <dubbo:provider  timeout="3000"/>

    <dubbo:reference id="memberService" interface="com.dubbox.service.MemberService"/>

    <!-- 声明需要暴露的服务接口-->
    <dubbo:service interface="com.dubbox.consumer.service.OrderService" ref="orderServiceImpl" protocol="rest"/>

    <bean id="orderServiceImpl" class="com.dubbox.consumer.service.impl.OrderServiceImpl"/>

    <dubbo:service interface="com.dubbox.consumer.service.TestService" ref="testServiceImpl" protocol="rest"/>

    <bean id="testServiceImpl" class="com.dubbox.consumer.service.impl.TestServiceImpl"/>
</beans>