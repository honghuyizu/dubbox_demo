
//设置所有工程公用的配置
allprojects {
    //插件：指定项目为java项目，项目编译(gradle build)时生成项目的jar包
    apply plugin: 'java'
}

//设置所有子工程公用的配置
subprojects {
    //插件：运行、编译应用程序并用非“fat jar”方式创建二进制发布版本
    //apply plugin: 'application'
    //插件：构建eclipse IDE的开发环境（下载依赖包，生成eclipse需要的.project、.classpath等文件）
    //apply plugin: 'eclipse'
    //插件：构建IntelliJ IDEA IDE的开发环境（下载依赖包，生成idea需要的配置文件）
    apply plugin: 'idea'
    //插件：构建web项目的开发环境（下载依赖包，生成所需要的.project、.classpath等文件。使用eclipse-j2ee版本时，指定为wtp环境）
    //apply plugin: 'eclipse-wtp'
    //插件：指定web项目，项目编译(gradle build)时生成项目的war包
    apply plugin: 'war'
    //插件：使用maven来管理依赖
    apply plugin: 'maven'
    //插件：发布jar包到maven仓库
    apply plugin: 'maven-publish'
    //------------------------------------------------------------------------------------
    //设置依赖库
    repositories {
        //maven本地仓库
        mavenLocal()
        //私有仓库
        maven { url "http://127.0.0.1:8081/nexus/content/repositories/releases" }
        //spring-io仓库
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        //maven中央仓库
        mavenCentral()
    }

    dependencies {
        //编译级别的依赖包
        compile fileTree(dir: 'libs', include: ['*.jar'])

        compile 'com.google.code.gson:gson:2.3.1'
        // log4j2
        compile 'org.apache.logging.log4j:log4j-core:2.4.1'
        compile 'org.apache.logging.log4j:log4j-api:2.4.1'
        compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.4.1'
        //------------apache
        compile 'org.apache.commons:commons-collections4:4.0'
        compile 'org.apache.commons:commons-lang3:3.4'
        compile 'org.apache.httpcomponents:httpclient:4.5'
        compile 'org.apache.ant:ant:1.9.6'
        compile 'org.apache.mina:mina-core:2.0.9'
        compile 'org.apache.commons:commons-pool2:2.4.2'
        // validator
        compile 'org.hibernate:hibernate-validator:5.2.0.Final'
        compile 'javax.validation:validation-api:1.1.0.Final'

        compile 'org.jboss.resteasy:jaxrs-api:3.0.7.Final'

        //http 异步
        compile 'org.apache.httpcomponents:httpasyncclient:4.1.1'

        // dubbo
        compile 'com.alibaba:dubbo:2.8.4'
        compile 'org.javassist:javassist:3.18.2-GA'
        compile 'javax.ws.rs:javax.ws:2.0'
        compile 'org.jboss.resteasy:resteasy-client:3.1.1.Final'

        // jackson
        compile 'com.fasterxml.jackson.core:jackson-core:2.7.0-rc2'
        compile 'com.fasterxml.jackson.core:jackson-databind:2.7.0-rc2'

        compile 'org.apache.kafka:kafka-clients:0.9.0.0'

        compile 'com.alibaba.rocketmq:rocketmq-client:3.2.6'

        //mongodb
        compile 'org.springframework.data:spring-data-mongodb:1.8.0.RELEASE'
        compile 'org.mongodb:mongo-java-driver:3.1.0'

        compile 'com.alibaba:druid:1.0.15'
        compile 'org.mybatis:mybatis:3.3.0'
        compile 'org.mybatis:mybatis-spring:1.2.3'

        compile 'mysql:mysql-connector-java:5.1.36'
        compile 'joda-time:joda-time:2.8.1'
        compile 'org.springframework:spring-jdbc:3.2.9.RELEASE'
        compile 'org.springframework:spring-test:3.2.9.RELEASE'
        compile 'org.springframework:spring-webmvc:3.0.9.RELEASE'
        compile 'org.springframework.hateoas:spring-hateoas:0.19.0.RELEASE'
        compile 'org.glassfish:javax.el:3.0.1-b08'
        compile 'commons-beanutils:commons-beanutils:1.8.3'


        compile 'org.apache.zookeeper:zookeeper:3.5.0-alpha'
        compile 'com.github.sgroschupf:zkclient:0.1'
        //------------kryo
        compile 'com.esotericsoftware.kryo:kryo:2.24.0'
        compile 'de.javakaffee:kryo-serializers:0.26'


        //------------lombok
        compile'org.projectlombok:lombok:1.16.14'
        compile 'log4j:log4j:1.2.17'
        testCompile 'junit:junit:4.11'

    }


    //解决中文乱码问题
    [compileJava, javadoc, compileTestJava]*.options*.encoding = 'UTF-8'
}
